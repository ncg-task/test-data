title
Deep Multi-Center Learning for Face Alignment
abstract
Facial landmarks are highly correlated with each other since a certain landmark can be estimated by its neighboring landmarks. Most of the existing deep learning methods only use one fully-connected layer called shape prediction layer to estimate the locations of facial landmarks. In this paper, we propose a novel deep learning framework named Multi-Center Learning with multiple shape prediction layers for face alignment. In particular, each shape prediction layer emphasizes on the detection of a certain cluster of semantically relevant landmarks respectively. Challenging landmarks are focused firstly, and each cluster of landmarks is further optimized respectively. Moreover, to reduce the model complexity, we propose a model assembling method to integrate multiple shape prediction layers into one shape prediction layer. Extensive experiments demonstrate that our method is effective for handling complex occlusions and appearance variations with real-time performance. The code for our method is available at https://github.com/ZhiwenShao/MCNet-Extension.
Index Terms-Multi-Center Learning, Model Assembling, Face Alignment * Corresponding author.
(a) Chin is occluded.
(b) Right contour is invisible.
I. INTRODUCTION
Face alignment refers to detecting facial landmarks such as eye centers, nose tip, and mouth corners. It is the preprocessor stage of many face analysis tasks like face animation, face beautification, and face recognition. A robust and accurate face alignment is still challenging in unconstrained scenarios, owing to severe occlusions and large appearance variations. Most conventional methods,,, only use low-level handcrafted features and are not based on the prevailing deep neural networks, which limits their capacity to represent highly complex faces.
Recently, several methods use deep networks to estimate shapes from input faces. Sun et al., Zhou et al., and Zhang et al. employed cascaded deep networks to refine predicted shapes successively. Due to the use of multiple networks, these methods have high model complexity with complicated training processes. Taking this into account, Zhang et al., proposed a Tasks-Constrained Deep Convolutional Network (TCDCN), which uses only one deep network with excellent performance. However, it needs extra labels of facial attributes for training samples, which limits its universality.
Each facial landmark is not isolated but highly correlated with adjacent landmarks. As shown in, facial landmarks along the chin are all occluded, and landmarks around the mouth are partially occluded. shows that landmarks on the right side of face are almost invisible. Therefore, landmarks in the same local face region have similar properties including occlusion and visibility. It is observed that the nose can be localized roughly with the locations of eyes and mouth. There are also structural correlations among different facial parts. Motivated by this fact, facial landmarks are divided into several clusters based on their semantic relevance.
In this work 1 , we propose a novel deep learning framework named Multi-Center Learning (MCL) to exploit the strong correlations among landmarks. In particular, our network uses multiple shape prediction layers to predict the locations of landmarks, and each shape prediction layer emphasizes on the detection of a certain cluster of landmarks respectively. By weighting the loss of each landmark, challenging landmarks are focused firstly, and each cluster of landmarks is further optimized respectively. Moreover, to decrease the model complexity, we propose a model assembling method to integrate multiple shape prediction layers into one shape prediction layer. The entire framework reinforces the learning process of each landmark with a low model complexity.
The main contributions of this study can be summarized as follows:
• We propose a novel multi-center learning framework for exploiting the strong correlations among landmarks. • We propose a model assembling method which ensures a low model complexity. Extensive experiments demonstrate that our method is effective for handling complex occlusions and appearance variations with real-time performance.
The remainder of this paper is structured as below. We discuss related works in the next section. In Section III, we illuminate the structure of our network and the learning algorithm. Extensive experiments are carried out in Section IV. Section V concludes this work.

II. RELATED WORK
We review researches from three aspects related to our method: conventional face alignment, unconstrained face alignment, face alignment via deep learning.

A. Conventional Face Alignment
Conventional face alignment methods can be classified as two categories: template fitting and regression-based.
Template fitting methods match faces by constructing shape templates. Cootes et al. proposed atypical template fitting method named Active Appearance Model (AAM), which minimizes the texture residual to estimate the shape. Asthana et al. used regression techniques to learn functions from response maps to shapes, in which the response map has stronger robustness and generalization ability than texture based features of AAM. Pedersoli et al. developed the mixture of trees of parts method by extending the mixtures from trees to graphs, and learned a deformable detector to align its parts to faces. However, these templates are not complete enough to cover complex variations, which are difficult to be generalized to unseen faces.
Regression-based methods predict the locations of facial landmarks by learning a regression function from face features to shapes. Cao et al. proposed an Explicit Shape Regression (ESR) method to predict the shape increment with pixeldifference features. Xiong et al. proposed a Supervised Descent Method (SDM) to detect landmarks by solving the nonlinear least squares problem, with Scale-Invariant Feature Transform (SIFT) features and linear regressors being applied. Ren et al. used a locality principle to extract a set of Local Binary Features (LBF), in which a linear regression is utilized for localizing landmarks. Lee et al. employs Cascade Gaussian Process Regression Trees (cGPRT) with shape-indexed difference of Gaussian features to achieve face alignment. It has a better generalization ability than cascade regression trees, and shows strong robustness against geometric variations of faces. Most of these methods give an initial shape and refine the shape in an iterative manner, where the final solutions are prone to getting trapped in a local optimum with a poor initialization. In contrast, our method uses a deep neural network to regress from raw face patches to the locations of landmarks.

B. Unconstrained Face Alignment
Large pose variations and severe occlusions are major challenges in unconstrained environments. Unconstrained face alignment methods are based on 3D models ordeal with occlusions explicitly.
Many methods utilize 3D shape models to solve largepose face alignment. Nair et al. refined the fit of a 3D point distribution model to perform landmark detection. Yu et al. used a cascaded deformable shape model to detect landmarks of large-pose faces. Cao et al. employed a displaced dynamic expression regression to estimate the 3D face shape and 2D facial landmarks. The predicted 2D landmarks are used to adjust the model parameters to better fit the current user. Jeni et al. proposed a 3D cascade regression method to implement 3D face alignment, which can maintain the pose invariance of facial landmarks within the range of around 60 degrees.
There are several occlusion-free face alignment methods. Burgos-Artizzu et al. developed a Robust Cascaded Pose Regression (RCPR) method to detect occlusions explicitly, and uses shape-indexed features to regress the shape increment. Yu et al. utilizes a Bayesian model to merge the estimation results from multiple regressors, in which each regressor is trained to localize facial landmarks with a specific pre-defined facial part being occluded. Wu et al. proposed a Robust Facial Landmark Detection (RFLD) method, which uses a robust cascaded regressor to handle complex occlusions and large head poses. To improve the performance of occlusion estimation, landmark visibility probabilities are estimated with an explicit occlusion constraint. Different from these methods, our method is not based on 3D models and does not process occlusions explicitly.

C. Face Alignment via Deep Learning
Deep learning methods can be divided into two classes: single network based and multiple networks based.
Sun et al. estimated the locations of 5 facial landmarks using Cascaded Convolutional Neural Networks (Cascaded CNN), in which each level computes averaged estimated shape and the shape is refined level by level. Zhou et al. used multi-level deep networks to detect facial landmarks from coarse to fine. Similarly, Zhang et al. proposed Coarse-to-Fine Auto-encoder Networks (CFAN). These methods all use multi-stage deep networks to localize landmarks in a coarse-tofine manner. Instead of using cascaded networks, Honari et al. proposed Recombinator Networks (RecNet) for learning coarse-to-fine feature aggregation with multi-scale input maps, where each branch extracts features based on current maps and the feature maps of coarser branches.
A few methods employ a single network to solve the face alignment problem. Shao et al. proposed a Coarse-to-Fine Training (CFT) method to learn the mapping from input face patches to estimated shapes, which searches the solutions smoothly by adjusting the relative weights between principal landmarks and elaborate landmarks. Zhang et al., used the TCDCN with auxiliary facial attribute recognition to predict correlative facial properties like expression and pose, which improves the performance of face alignment. Xiao et al. proposed a Recurrent Attentive-Refinement (RAR) network for face alignment under unconstrained conditions, where shape-indexed deep features and temporal information are taken as inputs and shape predictions are recurrently revised. Compared to these methods, our method uses only one network and is independent of additional facial attributes.

III. MULTI-CENTER LEARNING FOR FACE ALIGNMENT A. Network Architecture
The architecture of our network MCL is illustrated in. MCL contains three max-pooling layers, each of which follows a stack of two convolutional layers proposed by VGGNet. In the fourth stack of convolutional layers, we use a convolutional layer with D feature maps above two convolutional layers. We perform Batch Normalization (BN) and Rectified Linear Unit (ReLU) after each convolution to accelerate the convergence of our network. Most of the existing deep learning methods such as TCDCN, use the fully-connected layer to extract features, which is apt to overfit and hamper the generalization ability of the network. To sidestep these problems, we operate Global Average Pooling on the last convolutional layer to extract a high-level feature representation x, which computes the average of each feature map. With this improvement, our MCL acquires a higher representation power with fewer parameters.
Face alignment can be regarded as a nonlinear regression problem, which transforms appearance to shape. A transformation ? S (·) is used for modeling this highly nonlinear function, which extracts the feature x from the input face image I, formulated as
corresponds to the bias, and ? S (·) is a composite function of operations including convolution, BN, ReLU, and pooling. Traditionally, only one shape prediction layer is used, which limits the performance. In contrast, our MCL uses multiple shape prediction layers, each of which emphasizes on the detection of a certain cluster of landmarks. The first several layers are shared by multiple shape prediction layers, which are called shared layers forming the composite function ? S (·). For the i-th shape prediction layer, i = 1, · · · , m, a weight matrix W i = (w i 1 , w i 2 , · · · , w i 2n ) ? R (D+1)×2n is used to connect the feature x, where m and n are the number of shape prediction layers and landmarks, respectively. The reason why we train each shape prediction layer to predict n landmarks instead of one cluster of landmarks is that different facial parts have correlations, as shown in.
To decrease the model complexity, we use a model assembling function ? a (·) to integrate multiple shape prediction layers into one shape prediction layer, which is formulated as
where W a = (w a 1 , w a 2 , · · · , w a 2n ) ? R (D+1)×2n is the assembled weight matrix. Specifically, w a
where? 2j?1 and? 2j denote the predicted x-coordinate and y-coordinate of the j-th landmark respectively. Compared to other typical convolutional networks like VG-GNet, GoogLe-Net, and ResNet, our network MCL is substantially smaller and shallower. We believe that such a concise structure is efficient for estimating the locations of facial landmarks. Firstly, face alignment aims to regress coordinates of fewer than 100 facial landmarks generally, which demands much lower model complexity than visual recognition problems with more than 1, 000 classes. Secondly, a very deep network may fail to work well for landmark detection owing to the reduction of spatial information layer by layer. Other visual localization tasks, like face detection, usually use multiple cascaded shallow networks rather than a single very deep network. Finally, common face alignment benchmarks only contain thousands of training images. A simple network is not easy to overfit given a small amount of raw training data.

B. Learning Algorithm
The overview of our learning algorithm is shown in Algorithm 1. ? t and ? v are the training set and the validation Algorithm 1 Multi-Center Learning Algorithm.
Output: ?. 1: Pre-train shared layers and one shape prediction layer until convergence; 2: Fix the parameters of the first six convolutional layers and fine-tune subsequent layers until convergence; Fine-tune all the layers until convergence; for i = 1 tom do Fix ? Sand fine-tune the i-th shape prediction layer until convergence; 6: end for
set respectively. ? is the set of parameters including weights and biases of our network MCL, which is updated using Mini-Batch Stochastic Gradient Descent (SGD) at each iteration. The face alignment loss is defined as
where u j is the weight of the j-th landmark, y 2j?1 and y 2j denote the ground-truth x-coordinate and y-coordinate of the j-th landmark respectively, and dis the ground truth interocular distance between the eye centers.
Inter-ocular distance normalization provides fair comparisons among faces with different size, and reduces the magnitude of loss to speedup the learning process. During training, a too high learning rate may cause the missing of optimum so far as to the divergence of network, and a too low learning rate may lead to falling into a local optimum. We employ a low initial learning rate to avoid the divergence, and increase the learning rate when the loss is reduced significantly and continue the training procedure.
1) Pre-Training and Weighting Fine-Tuning: In Step 1, a basic model (BM) with one shape prediction layer is pretrained to learn a good initial solution. In Eq. 4, u j = 1 for all j. The average alignment error of each landmark of BM on ? v are b 1 , · · · , b n respectively, which are averaged overall the images. The landmarks with larger errors than remaining landmarks are treated as challenging landmarks.
In Steps 2 and 3, we focus on the detection of challenging landmarks by assigning them larger weights. The weight of the j-th landmark is proportional to its alignment error as
Instead of fine-tuning all the layers from BM directly, we use two steps to search the solution smoothly.
Step 2 searches the solution without deviating from BM overly.
Step 3 searches the solution within a larger range on the basis of the previous step. This stage is named weighting fine-tuning, which learns a weighting model (WM) with higher localization accuracy of challenging landmarks.
2) Multi-Center Fine-Tuning and Model Assembling: The face is partitioned into seven parts according to its semantic structure: left eye, right eye, nose, mouth, left contour, chin, and right contour. As shown in, different labeling patterns of 5, 29, and 68 facial landmarks are partitioned into 4, 5, and 7 clusters respectively. For the i-th shape prediction layer, the i-th cluster of landmarks are treated as the optimized center, and the set of indexes of remaining landmarks is denoted as Q i .  From Steps 4 to 6, the parameters of shared layers ? S are fixed, and each shape prediction layer is initialized with the parameters of the shape prediction layer of WM. When finetuning the i-th shape prediction layer, the weights of landmarks in P i and Q i are defined as
where ? 1 is a coefficient to make the i-th shape prediction layer emphasize on the detection of the i-th cluster of landmarks. The constraint between u P i and u Q i is formulated as
where | · | refers to the number of elements in a cluster. With Eqs. 6 and 7, the solved weights are formulated as
The average alignment error of each landmark of WM on ? v are w 1 , · · · , w n respectively. Similar to Eq. 5, the weight of the j-th landmark is
Although the landmarks in P i are mainly optimized, remaining landmarks are still considered with very small weights rather than zero. This is beneficial for utilizing implicit structural correlations of different facial parts and searching the solutions smoothly. This stage is called multi-center finetuning which learns multiple shape prediction layers. In Step 7, multiple shape prediction layers are assembled into one shape prediction layer by Eq. 2. With this model assembling stage, our method learns an assembling model (AM).
There is no increase of model complexity in the assembling process, so AM has a low computational cost. It improves the detection precision of each facial landmark by integrating the advantage of each shape prediction layer.
3) Analysis of Model Learning: To investigate the influence from the weights of landmarks on learning procedure, we calculate the derivative of Eq. 4 with respect to? k :
where k ? {2j ? 1, 2j}, j = 1, · · · , n. During the learning process, the assembled weight matrix W a in Eq. 3 is updated by SGD. Specifically,
where ? is the learning rate. If the j-th landmark is given a larger weight, its corresponding parameters will be updated with a larger step towards the optimal solution. Therefore, weighting the loss of each landmark ensures that the landmarks with larger weights are mainly optimized. Our method first uses the weighting fine-tuning stage to optimize challenging landmarks, and further uses the multi-center fine-tuning stage to optimize each cluster of landmarks respectively.
IV. EXPERIMENTS A. Datasets and Settings 1) Datasets: There are three challenging benchmarks AFLW, COFW, and IBUG, which are used for evaluating face alignment with severe occlusion and large variations of pose, expression, and illumination. The provided face bounding boxes are employed to crop face patches during testing.
• AFLW contains 25, 993 faces under real-world conditions gathered from Flickr. Compared with other datasets like MUCT and LFPW, AFLW exhibits larger pose variations and extreme partial occlusions.
Following the settings of,, 2, 995 images are used for testing, and 10, 000 images annotated with 5 landmarks are used for training, which includes 4, 151 LFW images and 5, 849 web images. • COFW is an occluded face dataset in the wild, in which the faces are designed with severe occlusions using accessories and interactions with objects. It contains 1, 007 images annotated with 29 landmarks. The training set includes 845 LFPW faces and 500 COFW faces, and the testing set includes remaining 507 COFW faces. • IBUG contains 135 testing images which present large variations in pose, expression, illumination, and occlusion. The training set consists of AFW, the training set of LFPW, and the training set of Helen, which are from 300-W with 3, 148 images labeled with 68 landmarks. 2) Implementation Details: We enhance the diversity of raw training data on account of their limited variation patterns, using five steps: rotation, uniform scaling, translation, horizontal flip, and JPEG compression. In particular, for each training face, we firstly perform multiple rotations, and attain a tight face bounding box covering the ground truth locations of landmarks of each rotated result respectively. Uniform scaling and translation with different extents on face bounding boxes are further conducted, in which each newly generated face bounding box is used to crop the face. Finally training samples are augmented through horizontal flip and JPEG compression. It is beneficial for avoiding overfitting and improving the robustness of learned models by covering various patterns.
We train our MCL using an open source deep learning framework Caffe. The input face patch is a 50 × 50 grayscale image, and each pixel value is normalized to [?1, 1) by subtracting 128 and multiplying 0.0078125. A more complex model is needed fora labeling pattern with more facial landmarks, so Dis set to be 512/512/1, 024 for 5/29/68 facial landmarks. The type of solver is SGD with a mini-batch size of 64, a momentum of 0.9, and a weight decay of 0.0005. The maximum learning iterations of pre-training and each finetuning step are 18×10 4 and 6×10 4 respectively, and the initial learning rates of pre-training and each fine-tuning step are 0.02 and 0.001 respectively. Note that the initial learning rate of fine-tuning should below to preserve some representational structures learned in the pre-training stage and avoid missing good intermediate solutions. The learning rate is multiplied by a factor of 0.3 at every 3 × 10 4 iterations, and the remaining parameter ? is set to be 125.
3) Evaluation Metric: Similar to previous methods,,, we report the inter-ocular distance normalized mean error, and treat the mean error larger than 10% as a failure. To conduct a more comprehensive comparison, the cumulative errors distribution (CED) curves are plotted. To measure the time efficiency, the average running speed (Frame per Second, FPS) on a single core i5-6200U 2.3GHz CPU is also reported. A single image is fed into the model at a time when computing the speed. In other words, we evaluate methods on four popular metrics: mean error (%), failure rate (%), CED curves, and average running speed. In the next sections, % in all the results are omitted for simplicity.

B. Comparison with State-of-the-Art Methods
We compare our work MCL against state-of-the-art methods including ESR, SDM, Cascaded CNN, RCPR, CFAN, LBF, cGPRT, CFSS, TCDCN,, ALR, CFT, RFLD, RecNet, RAR, and FLD+PDE. All the methods are evaluated on testing images using the face bounding boxes provided by benchmarks. In addition to given training images, TCDCN uses outside training data labeled with facial attributes. RAR augments training images with occlusions incurred by outside natural objects like sunglasses, phones, and hands. FLD+PDE performs facial landmark detection, pose and deformation estimation simultaneously, in which the training data of pose and deformation estimation are used. Other methods including our MCL only utilize given training images from the benchmarks. reports the results of our method and previous works on three benchmarks. Our method MCL outperforms most of the state-of-the-art methods, especially on AFLW dataset where a relative error reduction of 3.93% is achieved compared to RecNet. Cascaded CNN estimates the location of each The result is acquired by running the code at https://github.com/seetaface/SeetaFaceEngine/tree/master/FaceAlignment.   We compare with other methods on several challenging images from AFLW and COFW respectively in. Our method MCL indicates higher accuracy in the details than previous works. More examples on challenging IBUG are presented in. MCL demonstrates a superior capability of handling severe occlusions and complex variations of pose, expression, illumination. The CED curves of MCL and several state-of-the-art methods are shown in. It is observed that MCL achieves competitive performance on all three benchmarks. The average running speed of deep learning methods for detecting 68 facial landmarks are presented in. Except for the methods tested on the i5-6200U 2.3GHz CPU, other methods are reported with the results in the original papers. Since CFAN utilizes multiple networks, it costs more running time. RAR achieves only 4 FPS on a Titan-Z GPU, which cannot be applied to practical scenarios. Both TCDCN and our method MCL are based on only one network, so they show higher speed. Our method only takes 17.5 ms per face on a single core i5-6200U 2.3GHz CPU. This profits from low model complexity and computational costs of our network. It can be concluded that our method is able to be extended to real-time facial landmark tracking in unconstrained environments. C. Ablation Study 1) Global Average Pooling vs. Full Connection: Based on the previous version of our work, the last maxpooling layer and the D-dimensional fully-connected layer are replaced with a convolutional layer and a Global Average Pooling layer. The results of the mean error of BM and the previous version (pre-BM) are shown in. It can be seen that BM performs better on IBUG and  COFW but worse on AFLW than pre-BM. It demonstrates that Global Average Pooling is more advantageous for more complex problems with more facial landmarks. There are higher requirements for learned features when localizing more facial landmarks. For simple problems especially for localizing 5 landmarks of AFLW, a plain network with full connection is more prone to being trained.
The difference between pre-BM and BM is the structure of learning the feature x. The number of parameters for this part of pre-BM and BM are (4 × 4 × 128 + 1)D = 2, 049D and (3 × 3 × 128 + 1)D + 2D + 2D = 1, 157D respectively, where the three terms for BM correspond to the convolution, the expectation and variance of BN, and the scaling and shifting of BN. Therefore, BM has a stronger feature learning ability with fewer parameters than pre-BM. 2) Robustness of Weighting: To verify the robustness of weighting, random perturbations are added to the weights of landmarks. In particular, we plus a perturbation ? to the weight of each of random n/2 landmarks and minus ? to the weight of each of remaining n ? n/2 landmarks, where · refers to rounding down to the nearest integer. shows the variations of mean error of WM with the increase of ?. When ? is 0.4, WM can still achieves good performance. Therefore, weighting the loss of each landmark is robust to random perturbations. Even if different weights are obtained, the results will not be affected as long as the relative sizes of weights are identical. 3) Analysis of Shape Prediction Layers: Our method learns each shape prediction layer respectively with a certain cluster of landmarks being emphasized. The results of WM and two shape prediction layers with respect to the left eye and the right eye on IBUG benchmark are shown in. Compared to WM, the left eye model and the right eye model both reduce the alignment errors of their corresponding clusters. As a result, the assembled AM can improve the detection accuracy of landmarks of the left eye and the right eye on the basis of WM.
Note that the two models also improve the localization precision of other clusters. Taking the left eye model as an example, it additionally reduces the errors of landmarks of right eye, mouth, and chin, which is due to the correlations among different facial parts. Moreover, for the right eye cluster, the right eye model improves the accuracy more significantly than the left eye model. It can be concluded that each shape prediction layer emphasizes on the corresponding cluster respectively.

4) Integration of Weighting Fine-Tuning and Multi-Center Fine-Tuning:
Here we validate the effectiveness of weighting fine-tuning by removing the weighting fine-tuning stage to learn a Simplified AM from BM. presents the results of mean error of Simplified AM and AM respectively on COFW and IBUG. Note that Simplified AM has already acquired good results, which verifies the effectiveness of the multicenter fine-tuning stage. The accuracy of AM is superior to that of Simplified AM especially on challenging IBUG, which is attributed to the integration of two stages. A Weighting Simplified AM from Simplified AM using the weighting finetuning stage is also learned, whose results are shown in. It can be seen that Weighting Simplified AM improves slightly on COFW but fails to search a better solution on IBUG. Therefore, we choose to use the multi-center finetuning stage after the weighting fine-tuning stage. summarizes the results of mean error and failure rate of BM, WM, and AM. It can be observed that AM has higher accuracy and stronger robustness than BM and WM. depicts the enhancement from WM to AM for several examples of COFW. The localization accuracy of facial landmarks from each cluster is improved in the details. It is because each shape prediction layer increases the detection precision of corresponding cluster respectively.

D. MCL for Partially Occluded Faces
The correlations among different facial parts are very useful for face alignment especially for partially occluded faces. To investigate the influence of occlusions, we directly use trained WM and AM without any additional processing for partially occluded faces. Randomly 30% testing faces from COFW are processed with left eyes being occluded, where the tight bounding box covering landmarks of left eye is filled with gray color, as shown in. shows the mean error results for the left eye cluster and other clusters of WM and AM on COFW benchmark, where "with (w/) occlusion (occlu.)" denotes that left eyes of the testing faces are processed with handcrafted occlusions as illustrated in, and "without (w/o) occlu." denotes that the testing faces are kept unchanged. Note that our method does not process occlusions explicitly, in which the training data is not performed handcrafted occlusions. After processing testing faces with occlusions, the mean error results of both WM and AM increase. Besides the results of landmarks from the left eye cluster, the results of remaining landmarks from other clusters become worse slightly. This is because different facial parts have correlations and the occlusions of the left eye influences results of other facial parts. Note that WM and AM still perform well on occluded left eyes with the mean error of 6.60 and 6.50 respectively, due to the following reasons. First, WM weights each landmark proportional to its alignment error, which exploits correlations among landmarks. Second, AM uses an independent shape prediction layer focusing on a certain cluster of landmarks with small weights u j > 0, j ? Q i in Eq. 9 for remaining landmarks, respectively, where correlations among landmarks are further exploited.

E. Weighting Fine-Tuning for State-of-the-Art Frameworks
Most recently, there area few well-designed and welltrained deep learning frameworks advancing the performance of face alignment, in which DAN is atypical work. DAN uses cascaded deep neural networks to refine the localization accuracy of landmarks iteratively, where the entire face image and the landmark heatmap generated from the previous stage are used in each stage. To evaluate the effectiveness of our method extended to state-of-the-art frameworks, we conduct experiments with our proposed weighting fine-tuning being applied to DAN. In particular, each stage of DAN is first pre-trained and further weighting fine-tuned, where DAN with weighting fine-tuning is named DAN-WM. Note that the results of retrained DAN (re-DAN) using the published code are slightly worse than reported results of DAN. For a fair comparison, the results of mean error of DAN, re-DAN, and DAN-WM on IBUG benchmark are all shown in. It can be seen that the mean error of re-DAN is reduced from 7.97 to 7.81 after using our proposed weighting fine-tuning. Note that our method uses only a single neural network, which has a concise structure with low model complexity. Our network can be replaced with a more powerful one such as cascaded deep neural networks, which could further improve the performance of face alignment.

V. CONCLUSION
In this paper, we have developed a novel multi-center learning framework with multiple shape prediction layers for face alignment. The structure of multiple shape prediction layers is beneficial for reinforcing the learning process of each cluster of landmarks. In addition, we have proposed the model assembling method to integrate multiple shape prediction layers into one shape prediction layer so as to ensure a low model complexity. Extensive experiments have demonstrated the effectiveness of our method including handling complex occlusions and appearance variations. First, each component of our framework including Global Average Pooling, multiple shape prediction layers, weighting fine-tuning, and multicenter fine-tuning contributes to face alignment. Second, our proposed neural network and model assembling method allow real-time performance. Third, we have extended our method for detecting partially occluded faces and integrating with state-of-the-art frameworks, and have shown that our method exploits correlations among landmarks and can further improve the performance of state-of-the-art frameworks. The proposed framework is also promising to be applied for other face analysis tasks and multi-label problems.