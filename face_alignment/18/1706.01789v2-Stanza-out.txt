title
Deep Alignment Network : A convolutional neural network for robust face alignment
abstract
In this paper , we propose Deep Alignment Network ( DAN ) , a robust face alignment method based on a deep neural network architecture .
DAN consists of multiple stages , where each stage improves the locations of the facial landmarks estimated by the previous stage .
Our method uses entire face images at all stages , contrary to the recently proposed face alignment methods that rely on local patches .
This is possible thanks to the use of landmark heatmaps which provide visual information about landmark locations estimated at the previous stages of the algorithm .
The use of entire face images rather than patches allows DAN to handle face images with large variation in head pose and difficult initializations .
An extensive evaluation on two publicly available datasets shows that DAN reduces the state - of - theart failure rate by up to 70 % .
Our method has also been submitted for evaluation as part of the Menpo challenge .
Introduction
The goal of face alignment is to localize a set of predefined facial landmarks ( eye corners , mouth corners etc. ) in an image of a face .
Face alignment is an important component of many computer vision applications , such as face verification , facial emotion recognition , humancomputer interaction and facial motion capture .
Most of the face alignment methods introduced in the recent years are based on shape indexed features .
In these approaches image features , such as SIFT or learned features , are extracted from image patches extracted around each of the landmarks .
The features are then used to iteratively refine the estimates of landmark locations .
While those approaches can be successfully applied to face alignment in many photos , their performance on the most challenging datasets leaves room for improvement .
We believe that this is due to the fact that for the most difficult images the features extracted at disjoint patches do not provide enough information and can lead the method into a local minimum .
In this work , we address the above shortcoming by proposing a novel face alignment method which we dub Deep Alignment Network ( DAN ) .
It is based on a multistage neural network where each stage refines the landmark positions estimated at the previous stage , iteratively improving the landmark locations .
The input to each stage of our algorithm ( except the first stage ) area face image normalized to a canonical pose and an image learned from the dense layer of the previous stage .
To make use of the entire face image during the process of face alignment , we additionally input at each stage a landmark heatmap , which is a key element of our system .
A landmark heatmap is an image with high intensity values around landmark locations where intensity decreases with the distance from the nearest landmark .
The convolutional neural network can use the heatmaps to infer the current estimates of landmark locations in the image and thus refine them .
An example of a landmark heatmap can be seen in which shows an outline of our method .
By using landmark heatmaps , our DAN algorithm is able to reduce the failure rate on the 300W public test set by a large margin of 72 % with respect to the state of the art .
To summarize , the three main contributions of this work are the following :
1 .
We introduce landmark heatmaps which transfer the information about current landmark location estimates between the stages of our method .
This improvement allows our method to make use of the entire image of a face , instead of local patches , and avoid falling into local minima .
2 .
The resulting robust face alignment method we propose in this paper reduces the failure rate by 60 % on .
A diagram showing an outline of the proposed method .
Each stage of the neural network refines the landmark location estimates produced by the previous stage , starting with an initial estimate S0 .
The connection layers form a link between the consecutive stages of the network by producing the landmark heatmaps
Ht , feature images
Ft and a transform
Tt which is used to warp the input image to a canonical pose .
By introducing landmark heatmaps and feature images we can transmit crucial information , including the landmark location estimates , between the stages of our method .
the 300W private test set and 72 % on the 300 - W public test set compared to the state of the art .
3 .
Finally , we publish both the source code of our implementation of the proposed method and the models used in the experiments .
The remainder of the paper is organized in the following manner .
In section 2 we give an overview of the related work .
In section 3 we provide a detailed description of the proposed method .
Finally , in section 4 we perform an evaluation of DAN and compare it to the state of the art .
Related work
Face alignment has along history , starting with the early Active Appearance Models , moving to Constrained Local Models and recently shifting to methods based on Cascaded Shape Regression ( CSR ) and deep learning .
In CSR based methods , the face alignment begins with an initial estimate of the landmark locations which is then refined in an iterative manner .
The initial shape S 0 is typically an average face shape placed in the bounding box returned by the face detector .
Each CSR iteration is characterized by the following equation :
where
St is the estimate of landmark locations at iteration t , rt is a regression function which returns the update to St given a feature ?
extracted from image I at the landmark locations .
The main differences between the variety of CSR based methods introduced in the literature lie in the choice of the feature extraction method ?
and the regression method rt .
For instance , Supervised Descent Method ( SDM ) uses SIFT features and a simple linear regressor .
LBF takes advantage of sparse features generated from binary trees and intensity differences of individual pixels .
LBF uses Support Vector Regression for regression which , combined with the sparse features , leads to a very efficient method running at up to 3000 fps .
Coarse to Fine Shape Searching ( CFSS ) , similarly to SDM , uses SIFT features extracted at landmark locations .
However the regression step of CSR is replaced with a search over the space of possible face shapes which goes from coarse to fine over several iterations .
This reduces the probability of falling into a local minimum and thus improves convergence .
MIX also uses SIFT for feature extraction , while regression is performed using a mixture of experts , where each expert is specialized in a certain part of the space of face shapes .
Moreover MIX , warps the input image before each iteration so that the current estimate of the face shape matches a predefined canonical face shape .
Mnemonic Descent Method ( MDM ) fuses the feature extraction and regression steps of CSR into a single Recurrent Neural Network that is trained end - to - end .
MDM also introduces memory into the process which allows information to be passed between CSR iterations .
While all of the above mentioned methods perform face alignment based only on local patches , there are some methods that estimate initial landmark positions using the entire face image and use local patches for refinement .
In contrast , DAN localizes the landmarks based on the entire face image at all of its stages .
The use of heatmaps for face alignment related tasks precedes the proposed method .
One method that uses heatmaps is , where a neural network outputs predictions in the form of a heatmap .
In contrast , the proposed method uses heatmaps solely as a means for transferring information between stages .
The development of novel methods contributes greatly in advancing face alignment .
However it can not be overlooked that the publication of several large scale datasets of annotated face images also had a crucial role in both improving the state of the art and the comparability of face alignment methods .
Deep Alignment Network
In this section , we describe our method , which we call the Deep Alignment Network ( DAN ) .
DAN is inspired by the Cascade Shape Regression ( CSR ) framework , just like CSR our method starts with an initial estimate of the face shape S 0 which is refined over several iterations .
However , in DAN we substitute each CSR iteration with a single stage of a deep neural network which performs both feature extraction and regression .
The major difference between DAN and approaches based on CSR is that DAN extracts features from the entire face image rather than the patches around landmark locations .
This is achieved by introducing additional input to each stage , namely a landmark heatmap which indicates the current estimates of the landmark positions within the global face image and transmits this information between the stages of our algorithm .
An outline of the proposed method is shown in .
Therefore , each stage of DAN takes three inputs : the input image I which has been warped so that the current landmark estimates are aligned with the canonical shape S 0 , a landmark heatmap H t and a feature image F t which is generated from a dense layer connected to the penultimate layer of the previous stage t ?
1 . The first stage only takes the input image as the initial landmarks are always assumed to be the average face shape S 0 located in the middle of the
image .
A single stage of DAN consists of a feed - forward neural network which performs landmark location estimation and connection layers that generate the input for the next stage .
The details of the feed - forward network are described in subsection 3.1 .
The connection layers consist of the Transform Estimation layer , the Image Transform layer , Landmark Transform layer , Heatmap Generation layer and Feature Generation layer .
The structure of the connection layers is shown in .
The transform estimation layer generates the transform T t + 1 , where t is the number of the stage .
The transformation is used to warp the input image I and the current landmark estimates
St so that St is close to the canonical shape S 0 .
The transformed landmarks T t+1 ( S t ) are passed to the heatmap generation layer .
The inverse transform T ?1 t+ 1 is used to map the output landmarks of the consecutive stage back into the original coordinate system .
The details of the Transform Estimation , Image Transform and Landmark Transforms layer are described in subsection 3.2 .
The Heatmap Generation and Feature Image layers are described in sections 3.3 , 3.4 .
Section 3.5 details
Name
Shape the training procedure .
Feed - forward neural network
The structure of the feed - forward part of each stage is shown in .
With the exception of max pooling layers and the output layer , every layer takes advantage of batch normalization and uses Rectified Linear Units ( ReLU ) for activations .
A dropout layer is added before the first fully connected layer .
The last layer outputs the update ?
S t to the current estimate of the landmark positions .
The overall shape of the feed - forwad network was inspired by the network used in for the Image Net ILSVRC 2014 competition .
Normalization to canonical shape
In DAN the input image I is transformed for each stage so that the current estimates of the landmarks are aligned with the canonical face shape S 0 .
This normalization step allows the further stages of DAN to be invariant to a given family of transforms .
This in turn simplifies the alignment task and improves accuracy .
The Transform Estimation layer of our network is responsible for estimating the parameters of transform T t + 1 at the output of stage t.
As input the layer takes the output of the current stage St . Once T t + 1 is estimated the Image Transform and the Landmark Transform layers transform the image I and landmarks
St to the canonical pose .
The image is transformed using bilinear interpolation .
Note that for the first stage of DAN the normalization step is not necessary since the input shape is always the average face shape S 0 , which is also the canonical face shape .
Since the input image is transformed , the output of every stage has to be transformed back to match the original image , the output of any DAN stage is thus :
where ?
S t is the output of the last layer of stage t and T ? 1 t is the inverse of transform T t A similar normalization step has been previously proposed in with the use of affine transforms .
In our implementation we chose to use similarity transforms as they do not cause non-uniform scaling and skewing of the output image .
shows examples of images before and after the transformation .
Landmark heatmap
The landmark heatmap is an image where the intensity is highest in the locations of landmarks and it decreases with the distance to the closest landmark .
Thanks to the use of landmark heatmaps the Convolutional Neural Network can infer the landmark locations estimated by the previous stage .
In consequence DAN can perform face alignment based on entire facial images .
At the input to a DAN stage the landmark heatmap is created based on the landmark estimates produced by the previous stage and transformed to the canonical pose : T t ( S t?1 ) .
The heatmap is generated using the following equation :
where H is the heatmap image and s i is the i - th landmark of T t ( S t?1 ) .
In our implementation the heatmap values are only calculated in a circle of radius 16 around each landmark to improve performance .
Note that similarly to normalization , this step is not necessary at the input of the first stage , since the input shape is always assumed to be S 0 , which would result in an identical heatmap for any input .
An example of a face image and a corresponding landmark heatmap is shown in .
Feature image layer
The feature image layer F t is an image created from a dense layer connected to the fc1 layer ( see ) of the previous stage t ?
1 . Such a connection allows any information learned by the preceding stage to be transferred to the consecutive stage .
This naturally complements the heatmap which transfers the knowledge about landmark locations learned by the previous stage .
The feature image layer is a dense layer which has 3136 units with ReLU activations .
The output of this dense layer is reshaped to a 5656 2D layer and upscaled to 112112 , which is the input shape of DAN stages .
We use the smaller 5656 image rather than 112112 since it showed similar results in our experiments , with considerably less parameters .
shows an example of a feature image .
Training procedure
The stages of DAN are trained sequentially .
The first stage is trained by itself until the validation error stops improving .
Subsequently the connection layers and the second stage are added and trained .
This procedure is repeated until further stages stop reducing the validation error .
While many face alignment methods learn a model that minimizes the Sum of Squared Errors of the landmark locations , DAN minimizes the landmark location error normalized by the distance between the pupils :
where S * is a vector of ground truth landmark locations , T t is the transform that normalizes the input image and shape for stage t and d ipd is the distance between the pupils of S * .
The use of this error is motivated by the fact that it is afar more common benchmark for face alignment methods than the Sum of Squared Errors .
Thanks to the fact that all of the layers used in DAN are differentiable DAN can also be trained end - to - end .
In order to evaluate end - to - end training in DAN we have experimented with several approaches .
Pre-training the first stage for several epochs followed by training of the entire network yielded similar accuracy to the proposed approach but the training was significantly longer .
Training the entire network from scratch yielded results significantly inferior to the proposed approach .
While we did not manage to obtain improved results with end - to - end training we believe that it is possible with a better training strategy .
We leave the creation of such a strategy for future work .
Experiments
In this section we perform an extensive evaluation of the proposed method on several public datasets as well as the test set of the Menpo challenge to which we have submitted our method .
The following paragraphs detail the datasets , error measures and implementation .
Section 4.1 compares our method with the state of the art , while section 4.2 shows our results in the Menpo challenge .
Section 4.3 discusses the influence of the number of stages on the performance of DAN .
Datasets
In order to evaluate our method we perform experiments on the data released for the 300W competition and the recently introduced Menpo challenge dataset .
The 300W competition data is a compilation of images from five datasets : LFPW , HELEN , AFW , IBUG and 300W private test set .
The last dataset was originally used for evaluating competition entries and at that time was private to the organizers of the competition , hence the name .
Each image in the dataset is annotated with 68 landmarks and accompanied by a bounding box generated by a face detector .
We follow the most established approach and divide the 300 - W competition data into training and testing parts .
The training part consists of the AFW dataset as well as training subsets of LFPW and HELEN , which results in a total of 3148 images .
The test data consists of the remaining datasets : IBUG , 300W private test set , test sets of LFPW , HELEN .
In order to facilitate comparison with previous methods we split this test data into four subsets :
the common subset which consists of the test subsets of LFPW and HELEN ( 554 images ) ,
the challenging subset which consists of the IBUG dataset ( 135 images ) ,
the 300W public test set which consists of the test subsets of LFPW and HELEN as well as the IBUG dataset ( 689 images ) ,
the 300W private test set ( 600 images ) .
The annotation for the images in the 300W public test set were originally published for the 300W competition as part of its training set .
We use them for testing as it became a common practice to do so in the recent years .
The Menpo challenge dataset consists of semi-frontal and profile face image datasets .
In our experiments we only use the semi-frontal dataset .
The dataset consists of training and testing subsets containing 6679 and 5335 images respectively .
The training subset consists of images from the FDDB and AFLW datasets .
The image were annotated with the same set of 68 landmarks as the 300W competition data but no face detector bounding boxes .
The annotations of the test subset have not been released .
Error measures
Several measures of face alignment error for an individual face image have been recently introduced :
the mean distance between the localized landmarks and the ground truth landmarks divided by the interocular distance ( the distance between the outer eye corners ) ,
the mean distance between the localized landmarks and the ground truth landmarks divided by the interpupil distance ( the distance between the eye centers ) ,
the mean distance between the localized landmarks and the ground truth landmarks divided by the diagonal of the bounding box .
In our work , we report our results using all of the above measures .
For evaluating our method on the test datasets we use three metrics : the mean error , the area under the cumulative error distribution curve ( AUC ? ) and the failure rate .
Similarly to , we calculate AUC ?
as the area under the cumulative distribution curve calculated up to a threshold ? , then divided by that threshold .
As a result the range of the AUC ?
values is always 0 to 1 .
Following , we consider each image with an inter-ocular normalized error of 0.08 or greater as failure and use the same threshold for AUC 0.08 .
In all the experiments we test on the full set of 68 landmarks .
Implementation
We train two models , DAN which is trained on the training subset of the 300W competition data and DAN - Menpo which is trained on both the above mentioned dataset and the Menpo challenge training set .
Data augmentation is performed by mirroring around the Y axis as well as random translation , rotation and scaling , all sampled from normal distributions .
During data augmentation a total of 10 images are created from each input image in the training set .
Both models ( DAN and DAN - Menpo ) consist of two stages .
Training is performed using Theano 0.9.0 and Lasagne 0.2 .
For optimization we use Adam stochastic optimization with an initial step size of 0.001 and mini batch size of 64 .
For validation we use a random subset of 100 images from the training set .
The Python implementation runs at 73 fps for images processed in parallel and at 45 fps for images processed sequentially on a GeForce GTX 1070 GPU .
We believe that the processing speed can be further improved by optimizing the implementation of some of our custom layers , most notably the Image Transform layer .
To enable reproducible research , we release the source code of our implementation as well as the models used in the experiments
1 .
The published implementation also contains an example of face tracking with the proposed method .
Comparison with state - of - the - art
We compare the DAN model with state - of - the - art methods on all of the test sets of the 300W competition data .
We also show results for the DAN - Menpo model but do not perform comparison since at the moment there are no published methods that use this dataset for training .
For each test set we initialize our method using the face detector bounding boxes provided with the datasets .
show the mean error , AUC 0.08 and the failure rate of the proposed method and other methods on the 300 W public test set .
shows the mean error , the AUC 0.08 and failure rate on the 300 W private test set .
All of the experiments performed on the two most difficult test subsets ( the challenging subset and the 300 W private test set ) show state - of - the - art results , including :
a failure rate reduction of 60 % on the 300 W private test set ,
a failure rate reduction of 72 % on the 300W public test set ,
a 9 % improvement of the mean error on the challenging subset .
This shows that the proposed DAN is particularly suited for handling difficult face images with a high degree of occlusion and variation in pose and illumination .
Results on the Menpo challenge test set
In order to evaluate the proposed method on the Menpo challenge test dataset we have submitted our results to the challenge and received the error scores from the challenge organizers .
The Menpo test data differs from the other datasets we used in that it does not include any bounding boxes which could be used to initialize face alignment .
For that reason we have decided to use a two step face alignment procedure , where the first step serves as an initialization for the second step .
The first step performs face alignment using a square initialization bounding box placed in the middle of the image with a size set to a percentage of image height .
The second step takes the result of the first step , transforms the landmarks and the image to the canonical face shape and Method AUC 0.08 Failure ( % ) inter-ocular normalization ESR 43 . 10.45 SDM 42.94 10.89 CFSS 49.87 5.08 MDM
52 . In order to determine the optimal size of the bounding boxes in the first step we ran DAN on a small subset of the Menpo test set for several bounding box sizes .
The optimal size was determined using a method that would estimate the face alignment error of a given set of landmarks and an image .
Said method extracts HOG [? ] features at each of the landmarks and uses a linear model to estimate the error .
The method was trained on the 300 W training set using ridge regression .
The chosen bounding box size was 46 % of the image height .
and show the CED curve , mean error , AU C 0.03 and failure rate for the DAN - Menpo model on the Menpo test set .
In all cases the errors are calculated using the diagonal of the bounding box normalization , used by the challenge organizers .
For the AUC and the failure rate we have chosen a threshold of 0.03 of the bounding box diagonal as it is approximately equivalent to 0.08 of the interocular distance used in the previous chapter .
shows examples of images from the Menpo test set and corresponding results produced by our method .
Note that even though DAN was trained primarily on semifrontal images it can handle fully profile images as well .
Further evaluation
In this subsection we evaluate several DAN models with a varying number of stages on the 300 W private test set .
All of the models were trained identically to the DAN model from section 4.1 .
shows the results of our eval - uation .
The addition of the second stage increases the AUC 0.08 by 20 % while the mean error and failure rate are reduced by 14 % and 56 % respectively .
The addition of a third stage does not bring significant benefit in any of the metrics .
Conclusions
In this paper , we introduced the Deep Alignment Network -a robust face alignment method based on convo - lutional neural networks .
Contrary to the recently proposed face alignment methods , DAN performs face alignment based on entire face images , which makes it highly robust to large variations in both initialization and head pose .
Using entire face images instead of local patches extracted around landmarks is possible thanks to the use of novel landmark heatmaps which transmit the information about landmark locations between DAN stages .
Extensive evaluation performed on two challenging , publicly available datasets shows that the proposed method improves the stateof - the - art failure rate by a significant margin of over 70 % .
Future research includes investigation of new strategies for training DAN in an end - to - end manner .
We also plan to introduce learning into the estimation of the transform T t that normalizes the shapes and images between stages .
Acknowledgements
